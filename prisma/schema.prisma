generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String      @id @default(cuid())
  name          String?     @unique
  email         String?     @unique
  password      String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  Combo         Combo[]
  comboLikes    Like[]
  sessions      Session[]
  favorites     Favorite[]
}

model Favorite {
  id        String   @id @default(cuid())
  comboId   String
  userId    String
  createdAt DateTime @default(now())
  combo     Combo    @relation(fields: [comboId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Like {
  id        String   @id @default(cuid())
  comboId   String
  userId    String
  createdAt DateTime @default(now())
  combo     Combo    @relation(fields: [comboId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Combo {
  id               String      @id @default(cuid())
  author           String
  combotitle       String
  combodescription String
  fightingstyle    String
  fruit            String
  sword            String
  weapon           String
  specialty        String
  race             String
  mainStats        String
  comboVideo       String
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  user             User        @relation(fields: [author], references: [name], onDelete: Cascade)
  comboLikes       Like[]
  favorites        Favorite[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
